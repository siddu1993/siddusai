{"version":3,"sources":["webpack:///./src/app/hospitalreg/hospitalreg.module.ts","webpack:///./src/app/hospitalreg/hospitalreg.page.html","webpack:///./src/app/hospitalreg/hospitalreg.page.scss","webpack:///./src/app/hospitalreg/hospitalreg.page.ts"],"names":[],"mappings":"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","file":"hospitalreg-hospitalreg-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HospitalregPage } from './hospitalreg.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HospitalregPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [HospitalregPage]\n})\nexport class HospitalregPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-button (click)=\\\"back()\\\" >\\n              <ion-icon name=\\\"arrow-back\\\"  ></ion-icon>\\n            </ion-button>\\n          </ion-buttons>\\n      <ion-title>Hospital Registration</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content>\\n      <form [formGroup]=\\\"validations_form\\\" >\\n  \\n      <ion-card>\\n  \\n          <ion-grid>\\n             \\n          \\n            <ion-row>   \\n            <ion-col size=\\\"6\\\">\\n             \\n              <ion-item>\\n                <ion-label  position=\\\"floating\\\" ><small>name</small></ion-label>\\n                <ion-input formControlName=\\\"name\\\"  ></ion-input>\\n                \\n              </ion-item>\\n              <ng-container *ngFor=\\\"let validation of validation_messages.name\\\">\\n                  <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('name').hasError(validation.type) && (validations_form.get('name').dirty || validations_form.get('name').touched)\\\">\\n                    <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n                  </div>\\n                </ng-container>\\n                </ion-col>\\n\\n          </ion-row>\\n         \\n            <ion-row>\\n                        <ion-col size=\\\"6\\\">\\n                     \\n                 \\n                          <ion-item>\\n                            <ion-label position=\\\"floating\\\" ><small>Email Id</small></ion-label>\\n                            <ion-input   formControlName=\\\"email\\\" ></ion-input>\\n                            \\n                          </ion-item>\\n        \\n                          <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n                              <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('email').hasError(validation.type) && (validations_form.get('email').dirty || validations_form.get('email').touched)\\\">\\n                                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n                              </div>\\n                            </ng-container>\\n                        </ion-col>\\n          \\n             \\n              \\n            \\n                  <ion-col>\\n                   \\n                <ion-item >\\n                  <ion-label position=\\\"floating\\\" ><small>Address</small></ion-label>\\n                  <ion-input   formControlName=\\\"address\\\"  ></ion-input>\\n                  \\n                </ion-item>\\n                <ng-container *ngFor=\\\"let validation of validation_messages.address\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('address').hasError(validation.type) && (validations_form.get('address').dirty || validations_form.get('address').touched)\\\">\\n                      <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n                    </div>\\n                  </ng-container>\\n                  </ion-col>\\n            \\n                </ion-row>\\n      \\n           \\n              \\n               \\n              \\n                <ion-row>\\n                  \\n                      <ion-col size=\\\"6\\\">\\n                         \\n                 \\n                        <ion-item>\\n                            <ion-label position=\\\"floating\\\" ><small>City</small></ion-label>\\n                            <ion-input   formControlName=\\\"city\\\"  ></ion-input> \\n                        </ion-item>\\n      \\n                        <ng-container *ngFor=\\\"let validation of validation_messages.city\\\">\\n                            <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('city').hasError(validation.type) && (validations_form.get('city').dirty || validations_form.get('city').touched)\\\">\\n                              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n                            </div>\\n                          </ng-container>\\n                      </ion-col>\\n                   \\n              \\n                    \\n                      <ion-col size=\\\"6\\\">\\n                     \\n                 \\n                          <ion-item>\\n  \\n                              <ion-label position=\\\"floating\\\" ><small>State</small></ion-label>\\n                              <ion-input   formControlName=\\\"state\\\"  ></ion-input> \\n  \\n  \\n                    \\n                          </ion-item>\\n        \\n                          <ng-container *ngFor=\\\"let validation of validation_messages.state\\\">\\n                              <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('state').hasError(validation.type) && (validations_form.get('state').dirty || validations_form.get('state').touched)\\\">\\n                                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n                              </div>\\n                            </ng-container>\\n                        </ion-col>\\n  \\n  \\n                        <ion-col size=\\\"6\\\">\\n                     \\n                 \\n                            <ion-item>\\n                                <ion-label position=\\\"floating\\\" ><small>phone_no</small></ion-label>\\n                                <ion-input   formControlName=\\\"phone_no\\\"  ></ion-input> \\n                            </ion-item>\\n          \\n                            <ng-container *ngFor=\\\"let validation of validation_messages.phone_no\\\">\\n                                <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('phone_no').hasError(validation.type) && (validations_form.get('phone_no').dirty || validations_form.get('phone_no').touched)\\\">\\n                                  <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n                                </div>\\n                              </ng-container>\\n                          </ion-col>\\n              \\n                  </ion-row>\\n                 \\n                  <div text-center>\\n                      <ion-button (click)=\\\"regester()\\\" [disabled]=\\\"!validations_form.valid\\\" fill=\\\"outline\\\" shape=\\\"round\\\"><small>Save</small></ion-button>\\n                     \\n                              \\n                    </div>   \\n                \\n          \\n      </ion-grid>\\n        </ion-card>\\n       \\n          </form>\\n  </ion-content>\\n  \\n  \\n  \"","module.exports = \".error-message {\\n  color: red;\\n  font-size: 14px;\\n  margin-left: 10px;\\n  margin-top: 10px; }\\n\\nion-toolbar {\\n  --background: #138D75!important ;\\n  opacity: 1 !important; }\\n\\nion-title {\\n  color: #ffffff !important; }\\n\\nion-buttons {\\n  color: #ffffff !important; }\\n\\nion-icon {\\n  color: #ffffff !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9zcGl0YWxyZWcvRDpcXG5ld2FwcG9sb1xcYXBwb2xvL3NyY1xcYXBwXFxob3NwaXRhbHJlZ1xcaG9zcGl0YWxyZWcucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUUsVUFBVTtFQUNWLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsZ0JBQWdCLEVBQUE7O0FBRWxCO0VBQ0UsZ0NBQWE7RUFDYixxQkFBbUIsRUFBQTs7QUFFckI7RUFDRSx5QkFBMEIsRUFBQTs7QUFFNUI7RUFDRSx5QkFBMEIsRUFBQTs7QUFFNUI7RUFDRSx5QkFBMEIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2hvc3BpdGFscmVnL2hvc3BpdGFscmVnLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvci1tZXNzYWdlXHJcbntcclxuICBjb2xvcjogcmVkO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICBtYXJnaW4tbGVmdDogMTBweDtcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG59XHJcbmlvbi10b29sYmFye1xyXG4gIC0tYmFja2dyb3VuZDogIzEzOEQ3NSFpbXBvcnRhbnQgO1xyXG4gIG9wYWNpdHk6MSFpbXBvcnRhbnQ7IFxyXG59XHJcbmlvbi10aXRsZXtcclxuICBjb2xvcjogI2ZmZmZmZiAhaW1wb3J0YW50IDsgXHJcbn1cclxuaW9uLWJ1dHRvbnN7XHJcbiAgY29sb3I6ICNmZmZmZmYgIWltcG9ydGFudCA7ICBcclxufVxyXG5pb24taWNvbntcclxuICBjb2xvcjogI2ZmZmZmZiAhaW1wb3J0YW50IDsgIFxyXG5cclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModalController, NavController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-hospitalreg',\n  templateUrl: './hospitalreg.page.html',\n  styleUrls: ['./hospitalreg.page.scss'],\n})\nexport class HospitalregPage implements OnInit {\n\n  validations_form: FormGroup;\n  patientData:any;\n  patient:any\n  constructor(private fb: FormBuilder,\n            protected auth: AuthService,\n            protected route: ActivatedRoute,\n            private router: Router,\n            private nav: NavController, \n \n\n    ) { }\n\n  ngOnInit() {\n     this.createForm();\n  }\n  createForm() {\n    this.validations_form = this.fb.group({\n     // patient_id: ['', Validators.required],\n      name: ['',Validators.required],\n      email: ['',Validators.required],\n      address: ['',Validators.required],\n      city: ['',Validators.required],\n      state:['',Validators.required],\n      phone_no:['',Validators.required],\n    });\n  }\n  regester() {\n \n  this.auth.hospreg(this.validations_form.value).subscribe(res=>{\n    if(res.status==\"success\"){\n      if(res.status=='success'){\n        this.auth.presentToast(\"registered successfully\");\n\n        this.nav.pop();\n\n        this.router.navigateByUrl('/login');\n      }\n    }\n  })\n\n}\nvalidation_messages = {\n\n  'name': [\n    { type: 'required', message: 'name is required.' },\n    { type: 'minlength', message: 'name must be at least 1 characters long.' },\n    //{ type: 'pattern', message: 'Your password must contain only numbers and letters.' },\n  ],\n \n\n  'phone_no': [\n       { type: 'required', message: 'phone is required.' }],\n  \n  'email': [\n          { type: 'required', message: 'email_id is required.' }\n         ],\n       \n         \n  'address': [\n            { type: 'required', message: 'address  is required.' }],\n            'city': [\n              { type: 'required', message: 'city  is required.' }],\n              'state': [\n                 { type: 'required', message: 'state  is required.' }],\n                    'hospital': [\n                  { type: 'required', message: 'hospital  is required.' }],\n                \n};\n\nback()\n{\n  this.nav.pop();\n\n}\n}\n"],"sourceRoot":""}