{"version":3,"sources":["webpack:///./src/app/fogotpass/fogotpass.module.ts","webpack:///./src/app/fogotpass/fogotpass.page.html","webpack:///./src/app/fogotpass/fogotpass.page.scss","webpack:///./src/app/fogotpass/fogotpass.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACmB;AACX;AAEV;AAEI;AAEjD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;KACzB;CACF,CAAC;AAYF;IAAA;IAAkC,CAAC;IAAtB,mBAAmB;QAV/B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,kEAAmB;gBACnB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,6DAAa,CAAC;SAC9B,CAAC;OACW,mBAAmB,CAAG;IAAD,0BAAC;CAAA;AAAH;;;;;;;;;;;;AC1BhC,8/BAA8/B,sBAAsB,yqBAAyqB,sBAAsB,snB;;;;;;;;;;;ACAntD,6BAA6B,iBAAiB,EAAE,aAAa,iBAAiB,sBAAsB,EAAE,WAAW,sBAAsB,EAAE,oBAAoB,eAAe,oBAAoB,sBAAsB,qBAAqB,EAAE,cAAc,8BAA8B,EAAE,iBAAiB,qCAAqC,0BAA0B,EAAE,cAAc,2BAA2B,EAAE,eAAe,8BAA8B,EAAE,UAAU,mBAAmB,EAAE,kBAAkB,qBAAqB,EAAE,iBAAiB,8BAA8B,EAAE,+CAA+C,2iD;;;;;;;;;;;;;;;;;;;;;ACA7jB;AACT;AACK;AACmC;AAClB;AAO/D;IAEE,uBAAmB,GAAiB,EAAS,KAAY,EAAQ,IAAgB,EAAQ,WAAwB,EAAQ,IAAoB;QAA1H,QAAG,GAAH,GAAG,CAAc;QAAS,UAAK,GAAL,KAAK,CAAO;QAAQ,SAAI,GAAJ,IAAI,CAAY;QAAQ,gBAAW,GAAX,WAAW,CAAa;QAAQ,SAAI,GAAJ,IAAI,CAAgB;QAmC7I,wBAAmB,GAAG;YACpB,OAAO,EAAE;gBACP,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,uBAAuB,EAAE;gBACtD,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,8CAA8C,EAAE;gBAC9E,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,kDAAkD,EAAE;gBAClF,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE,uCAAuC,EAAE;aAC5E;YACD,KAAK,EAAE;gBACL,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,uBAAuB,EAAE;gBACtD,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,8CAA8C,EAAE;aAI/E;SAEF,CAAC;QAjDA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAEvB,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC,KAAK,CAAC;YAExC,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;gBAE3C,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;gBACxB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;gBAExB,yDAAU,CAAC,QAAQ;aACpB,CAAC,CAAC;YAEH,GAAG,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;gBAE1C,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;gBACxB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;gBACxB,gEAAgE;gBAChE,yDAAU,CAAC,QAAQ;aACpB,CAAC,CAAC;SAKL,CAAC,CAAC;IAIH,CAAC;IACD,gCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,EAAE,EAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAI/C,CAAC;IAiBH,cAAc;IACd,2CAA2C;IAC3C,8FAA8F;IAC9F,qCAAqC;IACrC,+DAA+D;IAC/D,gBAAgB;IAChB,QAAQ;IAER,yCAAyC;IACzC,IAAI;IAEF,UAAU;IACV,IAAI;IAEJ,uCAAuC;IAEvC,IAAI;IAEJ,6BAAK,GAAL,UAAM,QAAQ;QAAd,iBAmBC;QAlBC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG;YAE3C,IAAI,GAAG,CAAC,MAAM,IAAI,SAAS,EAAE;gBAI3B,KAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;gBAIhB,qCAAqC;aACrC;iBAAM,IAAG,GAAG,CAAC,MAAM,IAAG,OAAO,EAAE;aAE/B;QACF,CAAC,EAAE;YACL,iDAAiD;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IACD,4BAAI,GAAJ;QAEE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;IAEjB,CAAC;IA/FU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,qGAAoC;;SAErC,CAAC;+EAGuB,4DAAa,EAAe,sDAAM,EAAa,yDAAW,EAAqB,0DAAW,EAAc,6DAAc;OAFlI,aAAa,CAgGzB;IAAD,oBAAC;CAAA;AAhGyB","file":"fogotpass-fogotpass-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FogotpassPage } from './fogotpass.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FogotpassPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [FogotpassPage]\n})\nexport class FogotpassPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"back()\\\" >\\n        <ion-icon name=\\\"arrow-back\\\"  ></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Fogot password</ion-title>\\n  </ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content>\\n\\n\\n    <form [formGroup]=\\\"validations_form\\\"  >\\n\\n\\n    <ion-card>\\n        <ion-grid>\\n          <ion-row>\\n          <ion-col size=\\\"12\\\">\\n           \\n            <ion-item>\\n              <ion-label  position=\\\"floating\\\" >Email</ion-label>\\n              <ion-input formControlName=\\\"email\\\"  ></ion-input>\\n              \\n            </ion-item>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n              <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('email').hasError(validation.type) && (validations_form.get('email').dirty || validations_form.get('email').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n              </div>\\n            </ng-container>\\n             \\n          </ion-col>\\n    \\n          <ion-col>\\n           \\n        <ion-item padding-bottom>\\n          <ion-label  position=\\\"floating\\\" >Date of Birth</ion-label>\\n          <ion-input type=\\\"password\\\" formControlName=\\\"dob\\\"  ></ion-input>\\n          \\n        </ion-item>\\n        <ng-container *ngFor=\\\"let validation of validation_messages.dob\\\">\\n          <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('dob').hasError(validation.type) && (validations_form.get('dob').dirty || validations_form.get('dob').touched)\\\">\\n            <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n          </div>\\n        </ng-container>\\n          </ion-col>\\n    \\n        </ion-row>\\n        \\n    </ion-grid>\\n      </ion-card>\\n      <div text-center >\\n\\n\\n          <ion-col >\\n      <div>\\n              <ion-button  color=\\\"primary\\\"  (click)=\\\"login(validations_form)\\\"  [disabled]=\\\"!validations_form.valid\\\" shape=\\\"round\\\">Forgot password</ion-button>\\n      </div>\\n            </ion-col>\\n          <ion-col >\\n            <div padding-top>\\n              <b class=\\\"psw\\\" [routerLink]=\\\"['/login']\\\">Login </b>\\n            </div>\\n          </ion-col>\\n         </div>\\n\\n         </form>\\n</ion-content>\\n\"","module.exports = \".i-button {\\n  height: 28px; }\\n\\n.cenimg {\\n  height: 71px;\\n  padding-top: 10px; }\\n\\n.sele {\\n  padding-top: 30px; }\\n\\n.error-message {\\n  color: red;\\n  font-size: 14px;\\n  margin-left: 10px;\\n  margin-top: 10px; }\\n\\nion-icon {\\n  color: #ffffff !important; }\\n\\nion-toolbar {\\n  --background: #138D75!important ;\\n  opacity: 1 !important; }\\n\\nion-card {\\n  border: 2px solid grey; }\\n\\nion-title {\\n  color: #ffffff !important; }\\n\\n.psw {\\n  color: skyblue; }\\n\\n.ion-content {\\n  overflow: hidden; }\\n\\nion-buttons {\\n  color: #ffffff !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9nb3RwYXNzL0Q6XFxuZXdhcHBvbG9cXGFwcG9sby9zcmNcXGFwcFxcZm9nb3RwYXNzXFxmb2dvdHBhc3MucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFDSixFQUFBOztBQUNBO0VBQ0ksWUFBWTtFQUNaLGlCQUFnQixFQUFBOztBQUVwQjtFQUNJLGlCQUFpQixFQUFBOztBQUVyQjtFQUVFLFVBQVU7RUFDVixlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGdCQUFnQixFQUFBOztBQUVsQjtFQUNJLHlCQUEwQixFQUFBOztBQUc5QjtFQUNJLGdDQUFhO0VBQ2IscUJBQW1CLEVBQUE7O0FBRXZCO0VBQ0ksc0JBQXNCLEVBQUE7O0FBR3pCO0VBQ0cseUJBQTBCLEVBQUE7O0FBRTdCO0VBQ0ksY0FBYSxFQUFBOztBQUVqQjtFQUNELGdCQUFnQixFQUFBOztBQUVmO0VBQ0cseUJBQTBCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9mb2dvdHBhc3MvZm9nb3RwYXNzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pLWJ1dHRvbntcclxuICAgIGhlaWdodDoyOHB4XHJcbn1cclxuLmNlbmltZ3tcclxuICAgIGhlaWdodDogNzFweDsgXHJcbiAgICBwYWRkaW5nLXRvcDoxMHB4O1xyXG59XHJcbi5zZWxle1xyXG4gICAgcGFkZGluZy10b3A6IDMwcHg7XHJcbn1cclxuLmVycm9yLW1lc3NhZ2Vcclxue1xyXG4gIGNvbG9yOiByZWQ7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuaW9uLWljb257XHJcbiAgICBjb2xvcjogI2ZmZmZmZiAhaW1wb3J0YW50IDsgXHJcbn1cclxuICAgICAgIFxyXG5pb24tdG9vbGJhcntcclxuICAgIC0tYmFja2dyb3VuZDogIzEzOEQ3NSFpbXBvcnRhbnQgO1xyXG4gICAgb3BhY2l0eToxIWltcG9ydGFudDsgXHJcbn1cclxuaW9uLWNhcmQge1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgZ3JleTtcclxuXHJcbiB9XHJcbiBpb24tdGl0bGV7XHJcbiAgICBjb2xvcjogI2ZmZmZmZiAhaW1wb3J0YW50IDsgXHJcbn1cclxuIC5wc3d7XHJcbiAgICAgY29sb3I6c2t5Ymx1ZTtcclxuIH1cclxuIC5pb24tY29udGVudHtcclxub3ZlcmZsb3c6IGhpZGRlbjtcclxuIH1cclxuIGlvbi1idXR0b25ze1xyXG4gICAgY29sb3I6ICNmZmZmZmYgIWltcG9ydGFudCA7ICBcclxuICB9Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { FormBuilder, FormControl, Validators, FormGroup } from '@angular/forms';\nimport { MenuController, NavController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-fogotpass',\n  templateUrl: './fogotpass.page.html',\n  styleUrls: ['./fogotpass.page.scss'],\n})\nexport class FogotpassPage implements OnInit {\n  public validations_form: FormGroup;\n  constructor(public nav:NavController ,public route:Router,public auth:AuthService,public formBuilder: FormBuilder,public menu: MenuController) { \n    this.menu.enable(true);\n  \n    this.validations_form = formBuilder.group({\n\n      email: new FormControl('', Validators.compose([\n       \n         Validators.maxLength(20),\n         Validators.minLength(1),\n      \n        Validators.required\n      ])),\n      \n      dob: new FormControl('', Validators.compose([\n       \n        Validators.maxLength(20),\n        Validators.minLength(1),\n       //Validators.pattern('^(?=.*[a-zA-Z])(?=.*[0-9])[a-zA-Z0-9]+$'),\n       Validators.required\n     ])),\n\n     //user_id: ['', Validators.compose([Validators.required])],\n   //  password: ['', Validators.compose([Validators.required])],\n    \n  });\n\n\n\n  }\n  ngOnInit() {\n    console.log(22,localStorage.getItem(\"token\"))\n  \n  \n  \n  }\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Username is required.' },\n      { type: 'minlength', message: 'Username must be at least 1 characters long.' },\n      { type: 'maxlength', message: 'Username cannot be more than 20 characters long.' },\n      { type: 'validUsername', message: 'Your username has already been taken.' }\n    ],\n    'dob': [\n      { type: 'required', message: 'password is required.' },\n      { type: 'minlength', message: 'password must be at least 1 characters long.' },\n      //{ type: 'pattern', message: 'Your password must contain only numbers and letters.' },\n     \n     \n    ],\n  \n  };\n//   login() {\n//     if (this.validations_form.invalid) {\n//       // Show an alert, input hints or something to inform the user the fields are invalid.\n//       // Let's just return for now\n//       console.log(\"this is \"+this.validations_form.invalid);\n//       return;\n//     }\n\n//     this.route.navigateByUrl('/list');\n// }\n\n  // login()\n  // {\n    \n  //   this.route.navigateByUrl('/list');\n\n  // }\n  \n  login(formData) {\n    this.auth.presentLoading();\n    this.auth.login(formData.value).subscribe(res => {\n    \n      if (res.status == \"success\") {\n       \n\n      \n        this.nav.pop();\n\n      \n\n       // this.route.navigateByUrl('/list');\n      } else if(res.status ==\"error\") {\n \n      }\n     }, () => {\n   // swal(\"Login failed, Login detils not exits \");\n    });\n  }\n  back()\n  {\n    this.nav.pop();\n  \n  }\n}\n"],"sourceRoot":""}