{"version":3,"sources":["webpack:///./src/app/selectable/selectable.module.ts","webpack:///./src/app/selectable/selectable.page.html","webpack:///./src/app/selectable/selectable.page.scss","webpack:///./src/app/selectable/selectable.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AACE;AAEZ;AAEM;AAEnD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;KAC1B;CACF,CAAC;AAYF;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAVhC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,sEAAqB;gBACrB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,+DAAc,CAAC;SAC/B,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;AC3BjC,6iC;;;;;;;;;;;ACAA,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;;ACAb;AAEH;AACN;AACK;AAE9C;IAAA;IAGA,CAAC;IAAD,WAAC;AAAD,CAAC;AAOD;IAQE,wBAAmB,GAAiB,EAAQ,KAAY,EAAQ,IAAgB;QAA7D,QAAG,GAAH,GAAG,CAAc;QAAQ,UAAK,GAAL,KAAK,CAAO;QAAQ,SAAI,GAAJ,IAAI,CAAY;QAC9E,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,KAAK,GAAG;YACX,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE;YACxB,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;YAC9B,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE;YAC3B,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE;YACxB,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;YAC9B,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE;SAC5B,CAAC;IACJ,CAAC;IAED,mCAAU,GAAV,UAAW,KAKV;QACC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAGD,oCAAW,GAAX,UAAY,KAGX;QACC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;IAEpC,CAAC;IACD,8BAAK,GAAL;QAEE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;IACjB,CAAC;IACD,6BAAI,GAAJ;QACE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;IAE5C,CAAC;IAID,+BAAM,GAAN;QAAA,iBAmBE;QAlBA,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,aAAG;YAEjC,IAAI,GAAG,CAAC,MAAM,IAAI,SAAS,EAAE;gBAC3B,IAAI,GAAG,CAAC,QAAQ,IAAI,EAAE,EAAE;oBAExB,KAAI,CAAC,QAAQ,GAAC,GAAG,CAAC,QAAQ,CAAC;iBAG1B;aAEF;QACH,CAAC,EAGE;YACC,KAAI,CAAC,IAAI,CAAC,YAAY,CAAC,uCAAuC,CAAC,CAAC;QACnE,CAAC,CACA,CAAC;IACJ,CAAC;IAGD,6BAAI,GAAJ,UAAK,EAAE;QAAP,iBAmBC;QAlBA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAC,QAAQ,EAAC,EAAE,EAAC,CAAC,CAAC,SAAS,CAAC,aAAG;YAEjD,IAAI,GAAG,CAAC,MAAM,IAAI,SAAS,EAAE;gBAC3B,IAAI,GAAG,CAAC,QAAQ,IAAI,EAAE,EAAE;oBAExB,KAAI,CAAC,QAAQ,GAAC,GAAG,CAAC,QAAQ,CAAC;iBAG1B;aAEF;QACH,CAAC,EAGE;YACC,KAAI,CAAC,IAAI,CAAC,YAAY,CAAC,uCAAuC,CAAC,CAAC;QACnE,CAAC,CACA,CAAC;IACJ,CAAC;IA1FS,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,wGAAqC;;SAEtC,CAAC;+EASuB,4DAAa,EAAc,sDAAM,EAAa,yDAAW;OARrE,cAAc,CA2F1B;IAAD,qBAAC;CAAA;AA3F0B","file":"selectable-selectable-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicSelectableModule } from 'ionic-selectable';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SelectablePage } from './selectable.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SelectablePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    IonicSelectableModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SelectablePage]\n})\nexport class SelectablePageModule {}\n","module.exports = \"<ion-header>\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-button (click)=\\\"close()\\\" >\\n          <ion-icon name=\\\"close\\\"  ></ion-icon>\\n        </ion-button>\\n      </ion-buttons>\\n  <ion-toolbar>\\n    <ion-title>Test Name</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-item>\\n    <ion-label>Test Name</ion-label>\\n    <ionic-selectable\\n      [(ngModel)]=\\\"port\\\"\\n      [items]=\\\"testname\\\"\\n      itemValueField=\\\"id\\\"\\n      itemTextField=\\\"name\\\"\\n      [canSearch]=\\\"true\\\"\\n      (onChange)=\\\"portChange($event)\\\">\\n    </ionic-selectable>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label>Type Of The test</ion-label>\\n    <ionic-selectable\\n      [(ngModel)]=\\\"port1\\\"\\n      [items]=\\\"testname\\\"\\n      [isMultiple]=\\\"true\\\"\\n      itemValueField=\\\"id\\\"\\n      itemTextField=\\\"name\\\"\\n      [canSearch]=\\\"true\\\"\\n      (onChange)=\\\"portChange1($event)\\\">\\n    </ionic-selectable>\\n  </ion-item>\\n  <ion-button (click)=\\\"next()\\\"  fill=\\\"outline\\\" shape=\\\"round\\\"><small>Save</small></ion-button>\\n\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbGVjdGFibGUvc2VsZWN0YWJsZS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { IonicSelectableComponent } from 'ionic-selectable';\nimport { NavController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\nclass Port {\n  public id: number;\n  public name: string;\n}\n\n@Component({\n  selector: 'app-selectable',\n  templateUrl: './selectable.page.html',\n  styleUrls: ['./selectable.page.scss'],\n})\nexport class SelectablePage {\n\n  ports: Port[];\n  port: Port;\n  port1:Port;\n  testname: any;\n  select: any;\n\n  constructor(public nav:NavController,public route:Router,public auth:AuthService) {\n    this.search();\n    this.ports = [\n      { id: 1, name: 'Tokai' },\n      { id: 2, name: 'Vladivostok' },\n      { id: 3, name: 'Navlakhi' },\n      { id: 4, name: 'pokai' },\n      { id: 5, name: 'kladivostok' },\n      { id: 6, name: 'lavlakhi' }\n    ];\n  }\n\n  portChange(event: {\n    component: IonicSelectableComponent,\n    value: any\n\n    \n  }) {\n    this.comp(event.value.id);\n    console.log('port:', event.value);\n  }\n\n\n  portChange1(event: {\n    component: IonicSelectableComponent,\n    value: any\n  }) {\n    console.log('port:', event.value);\n \n  }\n  close()\n  {\n    this.nav.pop();\n  }\n  next(){\n    this.route.navigateByUrl('/chckpdetails');\n  \n  }\n  \n\n\n  search(){\n    this.auth.lab_tests().subscribe(res => {\n      \n      if (res.status == \"success\") {\n        if (res.response != \"\") {\n       \n        this.testname=res.response;\n     \n        \n        }\n     \n      }\n    },\n       \n \n       () => {\n        this.auth.presentToast(\"Login failed, Login detils not exits \");\n     }\n     );\n   }\n   \n\n   comp(id){\n    this.auth.findbytestid({relation:id}).subscribe(res => {\n      \n      if (res.status == \"success\") {\n        if (res.response != \"\") {\n       \n        this.testname=res.response;\n     \n        \n        }\n     \n      }\n    },\n       \n \n       () => {\n        this.auth.presentToast(\"Login failed, Login detils not exits \");\n     }\n     );\n   }\n}\n"],"sourceRoot":""}