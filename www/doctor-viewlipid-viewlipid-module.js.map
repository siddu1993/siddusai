{"version":3,"sources":["webpack:///./src/app/doctor/viewlipid/viewlipid.module.ts","webpack:///./src/app/doctor/viewlipid/viewlipid.page.html","webpack:///./src/app/doctor/viewlipid/viewlipid.page.scss","webpack:///./src/app/doctor/viewlipid/viewlipid.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEI;AAEjD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;KACzB;CACF,CAAC;AAWF;IAAA;IAAkC,CAAC;IAAtB,mBAAmB;QAT/B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,6DAAa,CAAC;SAC9B,CAAC;OACW,mBAAmB,CAAG;IAAD,0BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBhC,0bAA0b,WAAW,gCAAgC,WAAW,oJAAoJ,aAAa,yIAAyI,gBAAgB,oP;;;;;;;;;;;ACA1yB,+DAA+D,uJ;;;;;;;;;;;;;;;;;;;;ACAb;AACc;AACP;AACN;AAOnD;IAIE,uBAAmB,eAA+B,EAAS,cAA8B,EAAQ,GAAiB,EACzG,KAAY,EAAQ,IAAgB;QAD7C,iBAmBG;QAnBgB,oBAAe,GAAf,eAAe,CAAgB;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAAQ,QAAG,GAAH,GAAG,CAAc;QACzG,UAAK,GAAL,KAAK,CAAO;QAAQ,SAAI,GAAJ,IAAI,CAAY;QAEzC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,gBAAM;YAC9C,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YAKlD,uBAAuB;YAIjB,OAAO,CAAC,GAAG,CAAC,YAAY,EAAC,KAAI,CAAC,MAAM,CAAE,CAAC,CAAC,uCAAuC;QACnF,CAAC,CAAC,CAAC;IAKH,CAAC;IAEH,gCAAQ,GAAR;IACA,CAAC;IACD,8BAAM,GAAN,UAAO,CAAC;QAAR,iBAqBE;QApBA,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAC,SAAS,EAAC,CAAC,EAAC,CAAC,CAAC,SAAS,CAAC,aAAG;YAEhD,IAAI,GAAG,CAAC,MAAM,IAAI,SAAS,EAAE;gBAC3B,IAAI,GAAG,CAAC,QAAQ,IAAI,EAAE,EAAE;oBAChC,KAAI,CAAC,MAAM,GAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBAE1B,gCAAgC;oBAGlC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;iBAE3B;aAEF;QACH,CAAC,EAGE;QACF,CAAC,CACA,CAAC;IACJ,CAAC;IAED,4BAAI,GAAJ;QAEE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;IACjB,CAAC;IArDS,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,4GAAoC;;SAErC,CAAC;+EAKmC,8DAAe,EAAyB,8DAAc,EAAY,4DAAa;YACnG,sDAAM,EAAa,gEAAW;OALlC,aAAa,CAsDzB;IAAD,oBAAC;CAAA;AAtDyB","file":"doctor-viewlipid-viewlipid-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ViewlipidPage } from './viewlipid.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ViewlipidPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ViewlipidPage]\n})\nexport class ViewlipidPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-button (click)=\\\"back()\\\" >\\n            <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n          </ion-button>\\n        </ion-buttons>\\n    <ion-title>Report</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n<ion-card class=\\\"cardsize\\\" *ngFor=\\\"let item of result.data\\\">\\n    <ion-item lines=\\\"none\\\">\\n      <h6 slot=\\\"start\\\">{{item.name}}</h6>\\n      <h6 slot=\\\"end\\\">{{item.unit}}</h6>\\n    </ion-item>\\n  \\n    <ion-item class=\\\"activated\\\" lines=\\\"none\\\">\\n      <h6 slot=\\\"start\\\">method</h6>\\n      <small slot=\\\"end\\\"><p>{{item.method}}</p></small>\\n    </ion-item>\\n\\n     <!--   <ion-item lines=\\\"none\\\">\\n      <h6 slot=\\\"start\\\">Lab Test</h6>\\n      <h6 slot=\\\"end\\\">{{item.test_name}}</h6>\\n    </ion-item>\\n\\n    <ion-item class=\\\"activated\\\" lines=\\\"none\\\">\\n      <h6 slot=\\\"start\\\">Result</h6>\\n     <u slot=\\\"end\\\" (click)=\\\"view(item)\\\"> <h6 >View</h6></u>\\n    </ion-item>-->\\n  \\n  \\n  </ion-card>  \\n\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RvY3Rvci92aWV3bGlwaWQvdmlld2xpcGlkLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AlertController, NavController } from '@ionic/angular';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'src/app/auth.service';\n\n@Component({\n  selector: 'app-viewlipid',\n  templateUrl: './viewlipid.page.html',\n  styleUrls: ['./viewlipid.page.scss'],\n})\nexport class ViewlipidPage implements OnInit {\n  result: any;\n  id: any;\n\n  constructor(public alertController:AlertController,private activatedRoute: ActivatedRoute,public nav:NavController,\n    public route:Router,public auth:AuthService) { \n\n      this.activatedRoute.queryParams.subscribe(params => {\n        this.result = JSON.parse(params['test_id']);\n     \n  \n        \n  \n  //this.getval(this.id);\n  \n   \n        \n        console.log(\"hi test_id\",this.result ); // Print the parameter to the console. \n    });\n  \n\n\n\n    }\n\n  ngOnInit() {\n  }\n  getval(e){\n    this.auth.readingedit({report_id:e}).subscribe(res => {\n      \n      if (res.status == \"success\") {\n        if (res.response != \"\") {\nthis.result=res.response[0].data;\n\n       //   this.auth.presentToast(\"\");\n\n       \n     console.log(\"21\",res.response);\n     \n        }\n     \n      }\n    },\n       \n \n       () => {\n     }\n     );\n   }\n\n   back()\n   {\n     this.nav.pop();\n   }\n}\n"],"sourceRoot":""}