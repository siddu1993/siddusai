{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"<ion-header >\\n  <ion-toolbar>\\n    <ion-title text-center>Login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content >\\n\\n\\n      <ion-row>\\n          <ion-col col='6'>\\n            <h6 padding-top>Select type :</h6>\\n          </ion-col>\\n        <ion-col col='6'>\\n            <ion-select (ionChange)=\\\"change($event)\\\" placeholder=\\\"Select type\\\" padding-top padding-left padding-right>\\n                <ion-select-option selected value=\\\"1\\\">Patient</ion-select-option>\\n                <ion-select-option value=\\\"2\\\">Doctor</ion-select-option>\\n                <ion-select-option value=\\\"3\\\">Lab</ion-select-option>\\n      \\n              </ion-select>\\n          </ion-col>\\n      </ion-row>\\n       \\n\\n        \\n\\n <form [formGroup]=\\\"validations_patient\\\" *ngIf=\\\"sel=='1'\\\">\\n  <div text-center >\\n      <img class=\\\"cenimg\\\"  src=\\\"assets/images/apollo.png\\\">\\n\\n</div>\\n  <ion-card >\\n    \\n\\n    <ion-grid>\\n      <ion-row>\\n      <ion-col size=\\\"12\\\">\\n       \\n        <ion-item>\\n          <ion-label  position=\\\"floating\\\" >Patient Phone No</ion-label>\\n          <ion-input formControlName=\\\"phone_no\\\"  ></ion-input>\\n          \\n        </ion-item>\\n        <ng-container *ngFor=\\\"let validation of validation_messages.phone_no\\\">\\n          <div class=\\\"error-message\\\" *ngIf=\\\"validations_patient.get('phone_no').hasError(validation.type) && (validations_patient.get('phone_no').dirty || validations_patient.get('phone_no').touched)\\\">\\n            <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n          </div>\\n        </ng-container>\\n        \\n      </ion-col>\\n      <ion-col size=\\\"12\\\">\\n       \\n        <ion-item>\\n          <ion-label  position=\\\"floating\\\" >password</ion-label>\\n          <ion-input formControlName=\\\"password\\\" type=\\\"password\\\" ></ion-input>\\n          \\n        </ion-item>\\n        <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n          <div class=\\\"error-message\\\" *ngIf=\\\"validations_patient.get('password').hasError(validation.type) && (validations_patient.get('password').dirty || validations_patient.get('password').touched)\\\">\\n            <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n          </div>\\n        </ng-container>\\n        \\n      </ion-col>\\n\\n    </ion-row>\\n   \\n   \\n</ion-grid>\\n  </ion-card >\\n\\n    <div text-center >\\n\\n\\n    <ion-col >\\n<div>\\n        <ion-button    (click)=\\\"login(validations_patient,1)\\\"  [disabled]=\\\"!validations_patient.valid\\\" shape=\\\"round\\\">Login</ion-button>\\n</div>\\n      </ion-col>\\n      \\n\\n      <ion-row>\\n        <ion-col size=6>\\n          <div padding-top>\\n              <b class=\\\"psw\\\" [routerLink]=\\\"['/register']\\\">Sign Up</b><br>\\n          </div>\\n        </ion-col>\\n        <ion-col size=6>\\n          <div padding-top>\\n            <b class=\\\"psw\\\" [routerLink]=\\\"['/fogotpass']\\\">Forgot password? </b>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n   </div>\\n   </form>\\n\\n\\n\\n   <form [formGroup]=\\\"validations_docter\\\"   *ngIf=\\\"sel=='2'\\\">\\n    <div text-center>\\n        <img class=\\\"cenimg\\\"  src=\\\"assets/images/apollo.png\\\">\\n  \\n  </div>\\n    <ion-card >\\n      <ion-grid>\\n     \\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n         \\n          <ion-item>\\n            <ion-label  position=\\\"floating\\\" >Doctor Phone No</ion-label>\\n            <ion-input formControlName=\\\"docter_phone\\\"  ></ion-input>\\n            \\n          </ion-item>\\n          <ng-container *ngFor=\\\"let validation of validation_messages.docter_phone\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"validations_docter.get('docter_phone').hasError(validation.type) && (validations_docter.get('docter_phone').dirty || validations_docter.get('docter_phone').touched)\\\">\\n              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n            </div>\\n          </ng-container>\\n           \\n        </ion-col>\\n        <ion-col size=\\\"12\\\">\\n       \\n          <ion-item>\\n            <ion-label  position=\\\"floating\\\" >password</ion-label>\\n            <ion-input formControlName=\\\"password\\\"  type=\\\"password\\\" ></ion-input>\\n            \\n          </ion-item>\\n          <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"validations_docter.get('password').hasError(validation.type) && (validations_docter.get('password').dirty || validations_docter.get('password').touched)\\\">\\n              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n            </div>\\n          </ng-container>\\n          \\n        </ion-col>\\n  \\n      </ion-row>\\n     \\n      \\n  </ion-grid>\\n    </ion-card>\\n  \\n      <div text-center >\\n  \\n  \\n      <ion-col >\\n  <div>\\n          <ion-button (click)=\\\"login(validations_docter,2)\\\"  [disabled]=\\\"!validations_docter.valid\\\" shape=\\\"round\\\">Login</ion-button>\\n  </div>\\n        </ion-col>\\n        \\n  \\n        <ion-row>\\n          <ion-col size=6>\\n            <div padding-top>\\n                <b class=\\\"psw\\\" [routerLink]=\\\"['/docregiser']\\\">Sign Up</b><br>\\n            </div>\\n          </ion-col>\\n          <ion-col size=6>\\n            <div padding-top>\\n              <b class=\\\"psw\\\" [routerLink]=\\\"['/fogotpass']\\\">Forgot password? </b>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n     </div>\\n     </form>\\n\\n\\n\\n     <form [formGroup]=\\\"validations_lab\\\" *ngIf=\\\"sel=='3'\\\"\\n       >\\n      <div text-center>\\n          <img class=\\\"cenimg\\\"  src=\\\"assets/images/apollo.png\\\">\\n    \\n    </div>\\n      <ion-card>\\n        <ion-grid>\\n     \\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n           \\n            <ion-item>\\n              <ion-label  position=\\\"floating\\\" >Lab Phone No</ion-label>\\n              <ion-input formControlName=\\\"lab_phone\\\"  ></ion-input>\\n              \\n            </ion-item>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.lab_phone\\\">\\n              <div class=\\\"error-message\\\" *ngIf=\\\"validations_lab.get('lab_phone').hasError(validation.type) && (validations_lab.get('lab_phone').dirty || validations_lab.get('lab_phone').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n              </div>\\n            </ng-container>\\n             \\n          </ion-col>\\n          <ion-col size=\\\"12\\\">\\n       \\n            <ion-item>\\n              <ion-label  position=\\\"floating\\\" >password</ion-label>\\n              <ion-input formControlName=\\\"password\\\"  type=\\\"password\\\" ></ion-input>\\n              \\n            </ion-item>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n              <div class=\\\"error-message\\\" *ngIf=\\\"validations_lab.get('password').hasError(validation.type) && (validations_lab.get('password').dirty || validations_lab.get('password').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\n              </div>\\n            </ng-container>\\n            \\n          </ion-col>\\n    \\n        </ion-row>\\n        \\n    </ion-grid>\\n      </ion-card>\\n    \\n        <div text-center >\\n    \\n    \\n        <ion-col >\\n    <div>\\n            <ion-button   (click)=\\\"login(validations_lab,3)\\\"  [disabled]=\\\"!validations_lab.valid\\\" shape=\\\"round\\\">Login</ion-button>\\n    </div>\\n          </ion-col>\\n          \\n    <ion-row>\\n        <ion-col size=6>\\n          <div padding-top>\\n              <b class=\\\"psw\\\" [routerLink]=\\\"['/addnewlab']\\\">Sign Up</b><br>\\n          </div>\\n        </ion-col>\\n        <ion-col size=6>\\n          <div padding-top>\\n            <b class=\\\"psw\\\" [routerLink]=\\\"['/fogotpass']\\\">Forgot password? </b>\\n            <b class=\\\"psw\\\" [routerLink]=\\\"['/hospitalreg']\\\">Hospital Sign Up  </b>\\n\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n       </div>\\n       </form>\\n       \\n</ion-content>\\n\"","module.exports = \".i-button {\\n  height: 28px; }\\n\\n.cenimg {\\n  height: 150px;\\n  width: 150px;\\n  padding-top: 0px; }\\n\\n.sele {\\n  padding-top: 30px; }\\n\\nion-icon {\\n  color: #ffffff !important; }\\n\\nion-content {\\n  --ion-background-color:$header !important ; }\\n\\nion-item {\\n  --ion-background-color:rgb(211, 208, 208);\\n  border-radius: 17px; }\\n\\nion-button {\\n  --background: rgb(4, 110, 78)!important ; }\\n\\n.error-message {\\n  color: red;\\n  font-size: 14px;\\n  margin-left: 10px;\\n  margin-top: 10px; }\\n\\nion-title {\\n  color: #ffffff !important; }\\n\\nion-toolbar {\\n  --background: rgb(4, 110, 78)!important ;\\n  opacity: 1 !important; }\\n\\n.psw {\\n  color: #0f0f0f; }\\n\\n.ion-content {\\n  overflow: hidden; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vRDpcXG5ld2FwcG9sb1xcc2lkZHVzYWkuZ2l0XFx0cnVuay9zcmNcXGFwcFxcbG9naW5cXGxvZ2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQ0osRUFBQTs7QUFDQTtFQUNJLGFBQWE7RUFDYixZQUFZO0VBQ1osZ0JBQWUsRUFBQTs7QUFFbkI7RUFDSSxpQkFBaUIsRUFBQTs7QUFFckI7RUFDSSx5QkFBMEIsRUFBQTs7QUFHOUI7RUFDSSwwQ0FBdUIsRUFBQTs7QUFLM0I7RUFDSSx5Q0FBdUI7RUFDdkIsbUJBQW1CLEVBQUE7O0FBTXZCO0VBQ0ksd0NBQWEsRUFBQTs7QUFHakI7RUFFRSxVQUFVO0VBQ1YsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixnQkFBZ0IsRUFBQTs7QUFFbEI7RUFDSSx5QkFBMEIsRUFBQTs7QUFHOUI7RUFDSSx3Q0FBYTtFQUNYLHFCQUFtQixFQUFBOztBQUd4QjtFQUNJLGNBQXFCLEVBQUE7O0FBRXpCO0VBQ0QsZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaS1idXR0b257XHJcbiAgICBoZWlnaHQ6MjhweFxyXG59XHJcbi5jZW5pbWd7XHJcbiAgICBoZWlnaHQ6IDE1MHB4OyBcclxuICAgIHdpZHRoOiAxNTBweDtcclxuICAgIHBhZGRpbmctdG9wOjBweDtcclxufVxyXG4uc2VsZXtcclxuICAgIHBhZGRpbmctdG9wOiAzMHB4O1xyXG59XHJcbmlvbi1pY29ue1xyXG4gICAgY29sb3I6ICNmZmZmZmYgIWltcG9ydGFudCA7IFxyXG59XHJcblxyXG5pb24tY29udGVudCB7XHJcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiRoZWFkZXIgIWltcG9ydGFudCA7XHJcbiAgICAgXHJcbn1cclxuXHJcblxyXG5pb24taXRlbXtcclxuICAgIC0taW9uLWJhY2tncm91bmQtY29sb3I6cmdiKDIxMSwgMjA4LCAyMDgpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTdweDtcclxuXHJcblxyXG59XHJcblxyXG5cclxuaW9uLWJ1dHRvbntcclxuICAgIC0tYmFja2dyb3VuZDogcmdiKDQsIDExMCwgNzgpIWltcG9ydGFudCA7XHJcbn1cclxuXHJcbi5lcnJvci1tZXNzYWdlXHJcbntcclxuICBjb2xvcjogcmVkO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICBtYXJnaW4tbGVmdDogMTBweDtcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG59XHJcbmlvbi10aXRsZXtcclxuICAgIGNvbG9yOiAjZmZmZmZmICFpbXBvcnRhbnQgOyBcclxufVxyXG4gICAgICAgXHJcbmlvbi10b29sYmFye1xyXG4gICAgLS1iYWNrZ3JvdW5kOiByZ2IoNCwgMTEwLCA3OCkhaW1wb3J0YW50IDtcclxuICAgICAgb3BhY2l0eToxIWltcG9ydGFudDsgXHJcbn1cclxuXHJcbiAucHN3e1xyXG4gICAgIGNvbG9yOnJnYigxNSwgMTUsIDE1KTtcclxuIH1cclxuIC5pb24tY29udGVudHtcclxub3ZlcmZsb3c6IGhpZGRlbjtcclxuIH0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\nimport {FormBuilder, FormGroup, Validators, FormControl} from '@angular/forms';\nimport { MenuController, NavParams, NavController } from '@ionic/angular';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  // loginForm = {\n  //   user_id: \"\",\n  //   password: \"\",\n  //   customer_id: null,\n  //   store_id: \"\"\n  // };\n  public validations_patient: FormGroup;\n  public validations_docter: FormGroup;\n  public validations_lab: FormGroup;\n\n\n  shift: string;\n  userData: any;\n  sel: any;\n  constructor(public nav:NavController,public route:Router,public auth:AuthService,public formBuilder: FormBuilder,public menu: MenuController) { \n    this.menu.enable(false);\n    this.sel=1;\n    this.validations_patient  =  this.formBuilder.group({\n      phone_no: ['', Validators.required],\n     password: ['', Validators.required]\n     \n  });\n  this.validations_docter  =  this.formBuilder.group({\n  \n    docter_phone: ['', Validators.required],\n    password: ['', Validators.required]\n\n  \n});\nthis.validations_lab  =  this.formBuilder.group({\n \n  lab_phone: ['', Validators.required],\n  password: ['', Validators.required]\n\n});\n   // store_id: ['', Validators.compose([Validators.required])]\n\n\n\n\n  }\n  ngOnInit() {\n    console.log(22,localStorage.getItem(\"token\"))\n  \n    // if(localStorage.getItem(\"token\")!=null){\n    //   this.route.navigateByUrl('/home');\n    // }\n  \n  }\n  validation_messages = {\n    'phone_no': [\n      { type: 'required', message: 'patient_id is required.' },\n      { type: 'minlength', message: 'patient_id must be at least 8 characters long.' },\n      { type: 'maxlength', message: 'patient_id cannot be more than 12 numbers.' },\n    ],\n    'password': [\n      { type: 'required', message: 'password is required.' },\n      { type: 'minlength', message: 'password must be at least 1 characters long.' },\n      { type: 'maxlength', message: 'password cannot be more than 20 characters long.' },\n    ],\n    'docter_phone': [\n      { type: 'required', message: 'docter_id is required.' },\n      { type: 'minlength', message: 'docter_id must be at least 1 characters long.' },\n      //{ type: 'pattern', message: 'Your password must contain only numbers and letters.' },\n     \n     \n    ],\n    'lab_phone': [\n      { type: 'required', message: 'lab_id is required.' },\n      { type: 'minlength', message: 'lab_id must be at least 1 characters long.' },\n      //{ type: 'pattern', message: 'Your password must contain only numbers and letters.' },\n     \n     \n    ],\n  \n  };\n//   login() {\n//     if (this.validations_form.invalid) {\n//       // Show an alert, input hints or something to inform the user the fields are invalid.\n//       // Let's just return for now\n//       console.log(\"this is \"+this.validations_form.invalid);\n//       return;\n//     }\n\n//     this.route.navigateByUrl('/list');\n// }\n\n  // login()\n  // {\n    \n  //   this.route.navigateByUrl('/list');\n\n  // }\n  \n  login(formData,ex) {\n    localStorage.setItem('token', \"res.response.token\");\n   // location.reload();\n    this.auth.presentLoading();\n    this.auth.login(formData.value).subscribe(res => {\n    \n      if (res.status == \"success\") {\n        if (res.response != \"\") {\n        this.userData=res.response;\n        this.auth.presentToast(\"login successfull\");\n        this.nav.pop();\n\n        if(ex==1)\n        {\n          localStorage.setItem(\"userData\",JSON.stringify(this.userData));\n          localStorage.setItem(\"patient_id\",this.userData.patient_id);\n          localStorage.setItem(\"full_name\",this.userData.full_name);\n          \n          this.validations_patient.reset();\n          this.route.navigateByUrl('/medicaldetails');\n\n\n        }\n        if(ex==2)\n        { \n          localStorage.setItem(\"userData\",JSON.stringify(this.userData));\n          localStorage.setItem(\"docter_id\",this.userData.docter_id);\n\n          \n          localStorage.setItem(\"docter_phone\",JSON.stringify(this.userData.docter_phone));\n          this.validations_docter.reset();\n\n          this.route.navigateByUrl('/persoaldoc');\n        }\n        if(ex==3)\n        {\n          this.validations_lab.reset();\n          \n          localStorage.setItem(\"lab_id\",this.userData.lab_id);\n          localStorage.setItem(\"name\",this.userData.name);\n\n          \n          localStorage.setItem(\"userData\",JSON.stringify(this.userData));\n          this.route.navigateByUrl('/labinformation');\n        }\n        \n        \n       // location.reload();\n\n       // this.route.navigateByUrl('/list');\n      } else if(res.response ==\"\") {\n        this.auth.presentToast(\"no data found\");\n        this.validations_docter.reset;\n      }\n     \n    }\n    if(res.status=='error')\n    {\n      this.auth.presentToast(res.message);\n    }\n     }, (err) => {\n       console.log(err)\n      this.auth.presentToast(\"username or password incorrect\");\n\n    });\n  }\n  reg()\n  {\n    this.route.navigateByUrl('/register');\n  \n  }\n  change(e){\n    console.log(e);\n    this.sel=e.detail.value;\n  }\n}\n"],"sourceRoot":""}